// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SimpleTxMCDMA_SimpleTxMCDMA,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku040-ffva1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1148,HLS_SYN_LUT=1866,HLS_VERSION=2022_2}" *)

module SimpleTxMCDMA (
        ap_clk,
        ap_rst_n,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        TX_stream_TDATA,
        TX_stream_TVALID,
        TX_stream_TREADY,
        TX_stream_TKEEP,
        TX_stream_TSTRB,
        TX_stream_TLAST,
        TX_stream_TDEST,
        s_axi_s_axi_ctrl_AWVALID,
        s_axi_s_axi_ctrl_AWREADY,
        s_axi_s_axi_ctrl_AWADDR,
        s_axi_s_axi_ctrl_WVALID,
        s_axi_s_axi_ctrl_WREADY,
        s_axi_s_axi_ctrl_WDATA,
        s_axi_s_axi_ctrl_WSTRB,
        s_axi_s_axi_ctrl_ARVALID,
        s_axi_s_axi_ctrl_ARREADY,
        s_axi_s_axi_ctrl_ARADDR,
        s_axi_s_axi_ctrl_RVALID,
        s_axi_s_axi_ctrl_RREADY,
        s_axi_s_axi_ctrl_RDATA,
        s_axi_s_axi_ctrl_RRESP,
        s_axi_s_axi_ctrl_BVALID,
        s_axi_s_axi_ctrl_BREADY,
        s_axi_s_axi_ctrl_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;
parameter    C_S_AXI_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_ID_WIDTH = 1;
parameter    C_M_AXI_MEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_MEM_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_TARGET_ADDR = 0;
parameter    C_M_AXI_MEM_USER_VALUE = 0;
parameter    C_M_AXI_MEM_PROT_VALUE = 0;
parameter    C_M_AXI_MEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1:0] m_axi_mem_AWADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_AWID;
output  [7:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [C_M_AXI_MEM_AWUSER_WIDTH - 1:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [C_M_AXI_MEM_DATA_WIDTH - 1:0] m_axi_mem_WDATA;
output  [C_M_AXI_MEM_WSTRB_WIDTH - 1:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_WID;
output  [C_M_AXI_MEM_WUSER_WIDTH - 1:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1:0] m_axi_mem_ARADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_ARID;
output  [7:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [C_M_AXI_MEM_ARUSER_WIDTH - 1:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [C_M_AXI_MEM_DATA_WIDTH - 1:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_RID;
input  [C_M_AXI_MEM_RUSER_WIDTH - 1:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_BID;
input  [C_M_AXI_MEM_BUSER_WIDTH - 1:0] m_axi_mem_BUSER;
output  [31:0] TX_stream_TDATA;
output   TX_stream_TVALID;
input   TX_stream_TREADY;
output  [3:0] TX_stream_TKEEP;
output  [3:0] TX_stream_TSTRB;
output  [0:0] TX_stream_TLAST;
output  [1:0] TX_stream_TDEST;
input   s_axi_s_axi_ctrl_AWVALID;
output   s_axi_s_axi_ctrl_AWREADY;
input  [C_S_AXI_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_s_axi_ctrl_AWADDR;
input   s_axi_s_axi_ctrl_WVALID;
output   s_axi_s_axi_ctrl_WREADY;
input  [C_S_AXI_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_s_axi_ctrl_WDATA;
input  [C_S_AXI_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_s_axi_ctrl_WSTRB;
input   s_axi_s_axi_ctrl_ARVALID;
output   s_axi_s_axi_ctrl_ARREADY;
input  [C_S_AXI_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_s_axi_ctrl_ARADDR;
output   s_axi_s_axi_ctrl_RVALID;
input   s_axi_s_axi_ctrl_RREADY;
output  [C_S_AXI_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_s_axi_ctrl_RDATA;
output  [1:0] s_axi_s_axi_ctrl_RRESP;
output   s_axi_s_axi_ctrl_BVALID;
input   s_axi_s_axi_ctrl_BREADY;
output  [1:0] s_axi_s_axi_ctrl_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [1:0] channel_descr_addr_address0;
reg    channel_descr_addr_ce0;
wire   [31:0] channel_descr_addr_q0;
wire   [1:0] channel_descr_len_address0;
reg    channel_descr_len_ce0;
wire   [31:0] channel_descr_len_q0;
wire   [1:0] channel_descr_enable_address0;
reg    channel_descr_enable_ce0;
wire   [0:0] channel_descr_enable_q0;
reg    mem_blk_n_AR;
wire    ap_CS_fsm_state5;
wire   [2:0] i_2_fu_181_p2;
reg   [2:0] i_2_reg_232;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln12_fu_187_p1;
reg   [63:0] zext_ln12_reg_237;
wire   [0:0] icmp_ln12_fu_175_p2;
reg   [0:0] channel_descr_enable_load_reg_248;
wire    ap_CS_fsm_state3;
wire   [1:0] empty_18_fu_192_p1;
reg   [1:0] empty_18_reg_257;
reg   [31:0] channel_descr_len_load_reg_267;
wire    ap_CS_fsm_state4;
reg   [31:0] channel_descr_addr_load_reg_274;
wire   [32:0] sub_i_i_fu_208_p2;
reg   [32:0] sub_i_i_reg_285;
wire    ap_CS_fsm_state12;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_start;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_done;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_idle;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_ready;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWVALID;
wire   [63:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWADDR;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWID;
wire   [31:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWLEN;
wire   [2:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWSIZE;
wire   [1:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWBURST;
wire   [1:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWLOCK;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWCACHE;
wire   [2:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWPROT;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWQOS;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWREGION;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWUSER;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WVALID;
wire   [31:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WDATA;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WSTRB;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WLAST;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WID;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WUSER;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARVALID;
wire   [63:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARADDR;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARID;
wire   [31:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARLEN;
wire   [2:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARSIZE;
wire   [1:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARBURST;
wire   [1:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARLOCK;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARCACHE;
wire   [2:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARPROT;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARQOS;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARREGION;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARUSER;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_RREADY;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_BREADY;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TREADY;
wire   [31:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TDATA;
wire    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TVALID;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TKEEP;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TSTRB;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TLAST;
wire   [1:0] grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TDEST;
wire    mem_AWREADY;
wire    mem_WREADY;
reg    mem_ARVALID;
wire    mem_ARREADY;
reg   [63:0] mem_ARADDR;
reg   [31:0] mem_ARLEN;
wire    mem_RVALID;
reg    mem_RREADY;
wire   [31:0] mem_RDATA;
wire   [8:0] mem_RFIFONUM;
wire    mem_BVALID;
reg    grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_start_reg;
wire    ap_CS_fsm_state13;
wire   [63:0] zext_ln17_fu_195_p1;
reg   [2:0] i_fu_98;
reg    ap_block_state13_on_subcall_done;
wire   [32:0] channel_descr_len_load_cast_fu_205_p1;
wire    ap_CS_fsm_state14;
wire    regslice_both_TX_stream_V_data_V_U_apdone_blk;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    TX_stream_TVALID_int_regslice;
wire    TX_stream_TREADY_int_regslice;
wire    regslice_both_TX_stream_V_data_V_U_vld_out;
wire    regslice_both_TX_stream_V_keep_V_U_apdone_blk;
wire    regslice_both_TX_stream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_TX_stream_V_keep_V_U_vld_out;
wire    regslice_both_TX_stream_V_strb_V_U_apdone_blk;
wire    regslice_both_TX_stream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_TX_stream_V_strb_V_U_vld_out;
wire    regslice_both_TX_stream_V_last_V_U_apdone_blk;
wire    regslice_both_TX_stream_V_last_V_U_ack_in_dummy;
wire    regslice_both_TX_stream_V_last_V_U_vld_out;
wire    regslice_both_TX_stream_V_dest_V_U_apdone_blk;
wire    regslice_both_TX_stream_V_dest_V_U_ack_in_dummy;
wire    regslice_both_TX_stream_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_start_reg = 1'b0;
end

SimpleTxMCDMA_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2 grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_start),
    .ap_done(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_done),
    .ap_idle(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_idle),
    .ap_ready(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_ready),
    .m_axi_mem_AWVALID(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(1'b0),
    .m_axi_mem_AWADDR(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(1'b0),
    .m_axi_mem_WDATA(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(mem_ARREADY),
    .m_axi_mem_ARADDR(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(mem_RVALID),
    .m_axi_mem_RREADY(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(mem_RDATA),
    .m_axi_mem_RLAST(1'b0),
    .m_axi_mem_RID(1'd0),
    .m_axi_mem_RFIFONUM(mem_RFIFONUM),
    .m_axi_mem_RUSER(1'd0),
    .m_axi_mem_RRESP(2'd0),
    .m_axi_mem_BVALID(1'b0),
    .m_axi_mem_BREADY(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(2'd0),
    .m_axi_mem_BID(1'd0),
    .m_axi_mem_BUSER(1'd0),
    .TX_stream_TREADY(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TREADY),
    .zext_ln17(channel_descr_addr_load_reg_274),
    .channel_descr_len_load(channel_descr_len_load_reg_267),
    .sub_i_i(sub_i_i_reg_285),
    .dataPkt_dest_V(empty_18_reg_257),
    .TX_stream_TDATA(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TDATA),
    .TX_stream_TVALID(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TVALID),
    .TX_stream_TKEEP(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TKEEP),
    .TX_stream_TSTRB(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TSTRB),
    .TX_stream_TLAST(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TLAST),
    .TX_stream_TDEST(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TDEST)
);

SimpleTxMCDMA_s_axi_ctrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_S_AXI_CTRL_DATA_WIDTH ))
s_axi_ctrl_s_axi_U(
    .AWVALID(s_axi_s_axi_ctrl_AWVALID),
    .AWREADY(s_axi_s_axi_ctrl_AWREADY),
    .AWADDR(s_axi_s_axi_ctrl_AWADDR),
    .WVALID(s_axi_s_axi_ctrl_WVALID),
    .WREADY(s_axi_s_axi_ctrl_WREADY),
    .WDATA(s_axi_s_axi_ctrl_WDATA),
    .WSTRB(s_axi_s_axi_ctrl_WSTRB),
    .ARVALID(s_axi_s_axi_ctrl_ARVALID),
    .ARREADY(s_axi_s_axi_ctrl_ARREADY),
    .ARADDR(s_axi_s_axi_ctrl_ARADDR),
    .RVALID(s_axi_s_axi_ctrl_RVALID),
    .RREADY(s_axi_s_axi_ctrl_RREADY),
    .RDATA(s_axi_s_axi_ctrl_RDATA),
    .RRESP(s_axi_s_axi_ctrl_RRESP),
    .BVALID(s_axi_s_axi_ctrl_BVALID),
    .BREADY(s_axi_s_axi_ctrl_BREADY),
    .BRESP(s_axi_s_axi_ctrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .channel_descr_addr_address0(channel_descr_addr_address0),
    .channel_descr_addr_ce0(channel_descr_addr_ce0),
    .channel_descr_addr_q0(channel_descr_addr_q0),
    .channel_descr_len_address0(channel_descr_len_address0),
    .channel_descr_len_ce0(channel_descr_len_ce0),
    .channel_descr_len_q0(channel_descr_len_q0),
    .channel_descr_enable_address0(channel_descr_enable_address0),
    .channel_descr_enable_ce0(channel_descr_enable_ce0),
    .channel_descr_enable_q0(channel_descr_enable_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

SimpleTxMCDMA_mem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MEM_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_MEM_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_MEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MEM_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
mem_m_axi_U(
    .AWVALID(m_axi_mem_AWVALID),
    .AWREADY(m_axi_mem_AWREADY),
    .AWADDR(m_axi_mem_AWADDR),
    .AWID(m_axi_mem_AWID),
    .AWLEN(m_axi_mem_AWLEN),
    .AWSIZE(m_axi_mem_AWSIZE),
    .AWBURST(m_axi_mem_AWBURST),
    .AWLOCK(m_axi_mem_AWLOCK),
    .AWCACHE(m_axi_mem_AWCACHE),
    .AWPROT(m_axi_mem_AWPROT),
    .AWQOS(m_axi_mem_AWQOS),
    .AWREGION(m_axi_mem_AWREGION),
    .AWUSER(m_axi_mem_AWUSER),
    .WVALID(m_axi_mem_WVALID),
    .WREADY(m_axi_mem_WREADY),
    .WDATA(m_axi_mem_WDATA),
    .WSTRB(m_axi_mem_WSTRB),
    .WLAST(m_axi_mem_WLAST),
    .WID(m_axi_mem_WID),
    .WUSER(m_axi_mem_WUSER),
    .ARVALID(m_axi_mem_ARVALID),
    .ARREADY(m_axi_mem_ARREADY),
    .ARADDR(m_axi_mem_ARADDR),
    .ARID(m_axi_mem_ARID),
    .ARLEN(m_axi_mem_ARLEN),
    .ARSIZE(m_axi_mem_ARSIZE),
    .ARBURST(m_axi_mem_ARBURST),
    .ARLOCK(m_axi_mem_ARLOCK),
    .ARCACHE(m_axi_mem_ARCACHE),
    .ARPROT(m_axi_mem_ARPROT),
    .ARQOS(m_axi_mem_ARQOS),
    .ARREGION(m_axi_mem_ARREGION),
    .ARUSER(m_axi_mem_ARUSER),
    .RVALID(m_axi_mem_RVALID),
    .RREADY(m_axi_mem_RREADY),
    .RDATA(m_axi_mem_RDATA),
    .RLAST(m_axi_mem_RLAST),
    .RID(m_axi_mem_RID),
    .RUSER(m_axi_mem_RUSER),
    .RRESP(m_axi_mem_RRESP),
    .BVALID(m_axi_mem_BVALID),
    .BREADY(m_axi_mem_BREADY),
    .BRESP(m_axi_mem_BRESP),
    .BID(m_axi_mem_BID),
    .BUSER(m_axi_mem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(mem_ARVALID),
    .I_ARREADY(mem_ARREADY),
    .I_ARADDR(mem_ARADDR),
    .I_ARLEN(mem_ARLEN),
    .I_RVALID(mem_RVALID),
    .I_RREADY(mem_RREADY),
    .I_RDATA(mem_RDATA),
    .I_RFIFONUM(mem_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(mem_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(mem_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(mem_BVALID),
    .I_BREADY(1'b0)
);

SimpleTxMCDMA_regslice_both #(
    .DataWidth( 32 ))
regslice_both_TX_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TDATA),
    .vld_in(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TVALID),
    .ack_in(TX_stream_TREADY_int_regslice),
    .data_out(TX_stream_TDATA),
    .vld_out(regslice_both_TX_stream_V_data_V_U_vld_out),
    .ack_out(TX_stream_TREADY),
    .apdone_blk(regslice_both_TX_stream_V_data_V_U_apdone_blk)
);

SimpleTxMCDMA_regslice_both #(
    .DataWidth( 4 ))
regslice_both_TX_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TKEEP),
    .vld_in(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TVALID),
    .ack_in(regslice_both_TX_stream_V_keep_V_U_ack_in_dummy),
    .data_out(TX_stream_TKEEP),
    .vld_out(regslice_both_TX_stream_V_keep_V_U_vld_out),
    .ack_out(TX_stream_TREADY),
    .apdone_blk(regslice_both_TX_stream_V_keep_V_U_apdone_blk)
);

SimpleTxMCDMA_regslice_both #(
    .DataWidth( 4 ))
regslice_both_TX_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TSTRB),
    .vld_in(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TVALID),
    .ack_in(regslice_both_TX_stream_V_strb_V_U_ack_in_dummy),
    .data_out(TX_stream_TSTRB),
    .vld_out(regslice_both_TX_stream_V_strb_V_U_vld_out),
    .ack_out(TX_stream_TREADY),
    .apdone_blk(regslice_both_TX_stream_V_strb_V_U_apdone_blk)
);

SimpleTxMCDMA_regslice_both #(
    .DataWidth( 1 ))
regslice_both_TX_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TLAST),
    .vld_in(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TVALID),
    .ack_in(regslice_both_TX_stream_V_last_V_U_ack_in_dummy),
    .data_out(TX_stream_TLAST),
    .vld_out(regslice_both_TX_stream_V_last_V_U_vld_out),
    .ack_out(TX_stream_TREADY),
    .apdone_blk(regslice_both_TX_stream_V_last_V_U_apdone_blk)
);

SimpleTxMCDMA_regslice_both #(
    .DataWidth( 2 ))
regslice_both_TX_stream_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TDEST),
    .vld_in(grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TVALID),
    .ack_in(regslice_both_TX_stream_V_dest_V_U_ack_in_dummy),
    .data_out(TX_stream_TDEST),
    .vld_out(regslice_both_TX_stream_V_dest_V_U_vld_out),
    .ack_out(TX_stream_TREADY),
    .apdone_blk(regslice_both_TX_stream_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_start_reg <= 1'b1;
        end else if ((grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_ready == 1'b1)) begin
            grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_98 <= 3'd0;
    end else if (((1'b0 == ap_block_state13_on_subcall_done) & (1'b1 == ap_CS_fsm_state13))) begin
        i_fu_98 <= i_2_reg_232;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        channel_descr_addr_load_reg_274 <= channel_descr_addr_q0;
        channel_descr_len_load_reg_267 <= channel_descr_len_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_descr_enable_load_reg_248 <= channel_descr_enable_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (channel_descr_enable_q0 == 1'd1))) begin
        empty_18_reg_257 <= empty_18_fu_192_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_232 <= i_2_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        sub_i_i_reg_285 <= sub_i_i_fu_208_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln12_fu_175_p2 == 1'd0))) begin
        zext_ln12_reg_237[2 : 0] <= zext_ln12_fu_187_p1[2 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state13_on_subcall_done)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((mem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_descr_addr_ce0 = 1'b1;
    end else begin
        channel_descr_addr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        channel_descr_enable_ce0 = 1'b1;
    end else begin
        channel_descr_enable_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_descr_len_ce0 = 1'b1;
    end else begin
        channel_descr_len_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        mem_ARADDR = zext_ln17_fu_195_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state13) & (channel_descr_enable_load_reg_248 == 1'd1)))) begin
        mem_ARADDR = grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARADDR;
    end else begin
        mem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        mem_ARLEN = channel_descr_len_load_reg_267;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state13) & (channel_descr_enable_load_reg_248 == 1'd1)))) begin
        mem_ARLEN = grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARLEN;
    end else begin
        mem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        mem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state13) & (channel_descr_enable_load_reg_248 == 1'd1)))) begin
        mem_ARVALID = grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_ARVALID;
    end else begin
        mem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state13) & (channel_descr_enable_load_reg_248 == 1'd1)))) begin
        mem_RREADY = grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_m_axi_mem_RREADY;
    end else begin
        mem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_blk_n_AR = m_axi_mem_ARREADY;
    end else begin
        mem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln12_fu_175_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (channel_descr_enable_q0 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((mem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b0 == ap_block_state13_on_subcall_done) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign TX_stream_TVALID = regslice_both_TX_stream_V_data_V_U_vld_out;

assign TX_stream_TVALID_int_regslice = grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TVALID;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state13_on_subcall_done = ((grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_done == 1'b0) & (channel_descr_enable_load_reg_248 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign channel_descr_addr_address0 = zext_ln12_reg_237;

assign channel_descr_enable_address0 = zext_ln12_fu_187_p1;

assign channel_descr_len_address0 = zext_ln12_reg_237;

assign channel_descr_len_load_cast_fu_205_p1 = channel_descr_len_load_reg_267;

assign empty_18_fu_192_p1 = i_fu_98[1:0];

assign grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_TX_stream_TREADY = (ap_CS_fsm_state13 & TX_stream_TREADY_int_regslice);

assign grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_start = grp_SimpleTxMCDMA_Pipeline_VITIS_LOOP_17_2_fu_147_ap_start_reg;

assign i_2_fu_181_p2 = (i_fu_98 + 3'd1);

assign icmp_ln12_fu_175_p2 = ((i_fu_98 == 3'd4) ? 1'b1 : 1'b0);

assign sub_i_i_fu_208_p2 = ($signed(channel_descr_len_load_cast_fu_205_p1) + $signed(33'd8589934591));

assign zext_ln12_fu_187_p1 = i_fu_98;

assign zext_ln17_fu_195_p1 = channel_descr_addr_load_reg_274;

always @ (posedge ap_clk) begin
    zext_ln12_reg_237[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "SimpleTxMCDMA_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //SimpleTxMCDMA

