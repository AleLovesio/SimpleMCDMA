// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SimpleRxMCDMA_SimpleRxMCDMA,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku040-ffva1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=1994,HLS_SYN_LUT=4306,HLS_VERSION=2022_2}" *)

module SimpleRxMCDMA (
        ap_clk,
        ap_rst_n,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        RX_stream_TDATA,
        RX_stream_TVALID,
        RX_stream_TREADY,
        RX_stream_TKEEP,
        RX_stream_TSTRB,
        RX_stream_TLAST,
        RX_stream_TDEST,
        s_axi_s_axi_ctrl_AWVALID,
        s_axi_s_axi_ctrl_AWREADY,
        s_axi_s_axi_ctrl_AWADDR,
        s_axi_s_axi_ctrl_WVALID,
        s_axi_s_axi_ctrl_WREADY,
        s_axi_s_axi_ctrl_WDATA,
        s_axi_s_axi_ctrl_WSTRB,
        s_axi_s_axi_ctrl_ARVALID,
        s_axi_s_axi_ctrl_ARREADY,
        s_axi_s_axi_ctrl_ARADDR,
        s_axi_s_axi_ctrl_RVALID,
        s_axi_s_axi_ctrl_RREADY,
        s_axi_s_axi_ctrl_RDATA,
        s_axi_s_axi_ctrl_RRESP,
        s_axi_s_axi_ctrl_BVALID,
        s_axi_s_axi_ctrl_BREADY,
        s_axi_s_axi_ctrl_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_state12 = 21'd2048;
parameter    ap_ST_fsm_state13 = 21'd4096;
parameter    ap_ST_fsm_state14 = 21'd8192;
parameter    ap_ST_fsm_state15 = 21'd16384;
parameter    ap_ST_fsm_state16 = 21'd32768;
parameter    ap_ST_fsm_state17 = 21'd65536;
parameter    ap_ST_fsm_state18 = 21'd131072;
parameter    ap_ST_fsm_state19 = 21'd262144;
parameter    ap_ST_fsm_state20 = 21'd524288;
parameter    ap_ST_fsm_state21 = 21'd1048576;
parameter    C_S_AXI_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_S_AXI_CTRL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_ID_WIDTH = 1;
parameter    C_M_AXI_MEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_MEM_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_TARGET_ADDR = 0;
parameter    C_M_AXI_MEM_USER_VALUE = 0;
parameter    C_M_AXI_MEM_PROT_VALUE = 0;
parameter    C_M_AXI_MEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1:0] m_axi_mem_AWADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_AWID;
output  [7:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [C_M_AXI_MEM_AWUSER_WIDTH - 1:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [C_M_AXI_MEM_DATA_WIDTH - 1:0] m_axi_mem_WDATA;
output  [C_M_AXI_MEM_WSTRB_WIDTH - 1:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_WID;
output  [C_M_AXI_MEM_WUSER_WIDTH - 1:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1:0] m_axi_mem_ARADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_ARID;
output  [7:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [C_M_AXI_MEM_ARUSER_WIDTH - 1:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [C_M_AXI_MEM_DATA_WIDTH - 1:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_RID;
input  [C_M_AXI_MEM_RUSER_WIDTH - 1:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_BID;
input  [C_M_AXI_MEM_BUSER_WIDTH - 1:0] m_axi_mem_BUSER;
input  [31:0] RX_stream_TDATA;
input   RX_stream_TVALID;
output   RX_stream_TREADY;
input  [3:0] RX_stream_TKEEP;
input  [3:0] RX_stream_TSTRB;
input  [0:0] RX_stream_TLAST;
input  [1:0] RX_stream_TDEST;
input   s_axi_s_axi_ctrl_AWVALID;
output   s_axi_s_axi_ctrl_AWREADY;
input  [C_S_AXI_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_s_axi_ctrl_AWADDR;
input   s_axi_s_axi_ctrl_WVALID;
output   s_axi_s_axi_ctrl_WREADY;
input  [C_S_AXI_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_s_axi_ctrl_WDATA;
input  [C_S_AXI_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_s_axi_ctrl_WSTRB;
input   s_axi_s_axi_ctrl_ARVALID;
output   s_axi_s_axi_ctrl_ARREADY;
input  [C_S_AXI_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_s_axi_ctrl_ARADDR;
output   s_axi_s_axi_ctrl_RVALID;
input   s_axi_s_axi_ctrl_RREADY;
output  [C_S_AXI_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_s_axi_ctrl_RDATA;
output  [1:0] s_axi_s_axi_ctrl_RRESP;
output   s_axi_s_axi_ctrl_BVALID;
input   s_axi_s_axi_ctrl_BREADY;
output  [1:0] s_axi_s_axi_ctrl_BRESP;
output   interrupt;

wire    ap_rst_sw;
 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [1:0] channel_descr_addr_address0;
reg    channel_descr_addr_ce0;
wire   [31:0] channel_descr_addr_q0;
reg   [1:0] channel_descr_len_address0;
reg    channel_descr_len_ce0;
wire   [31:0] channel_descr_len_q0;
reg   [1:0] channel_descr_enable_address0;
reg    channel_descr_enable_ce0;
wire   [0:0] channel_descr_enable_q0;
reg   [1:0] channel_descr_done_address0;
reg    channel_descr_done_ce0;
reg    channel_descr_done_we0;
reg   [0:0] channel_descr_done_d0;
wire   [0:0] channel_descr_done_q0;
reg   [1:0] channel_descr_error_address0;
reg    channel_descr_error_ce0;
reg    channel_descr_error_we0;
reg   [0:0] channel_descr_error_d0;
reg   [1:0] channel_descr_transfered_data_address0;
reg    channel_descr_transfered_data_ce0;
reg    channel_descr_transfered_data_we0;
reg   [31:0] channel_descr_transfered_data_d0;
reg   [7:0] buffer_index;
reg    RX_stream_TDATA_blk_n;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln34_fu_654_p2;
reg   [0:0] n_remaining_channels_tot_reg_947;
wire    ap_CS_fsm_state2;
reg   [0:0] channel_descr_enable_load_reg_973;
wire    ap_CS_fsm_state3;
wire   [1:0] n_remaining_channels_tot_3_fu_626_p3;
reg   [1:0] n_remaining_channels_tot_3_reg_998;
wire    ap_CS_fsm_state4;
wire   [2:0] n_remaining_channels_tot_4_fu_643_p3;
reg   [2:0] n_remaining_channels_tot_4_reg_1023;
wire    ap_CS_fsm_state5;
wire   [2:0] n_remaining_channels_2_fu_659_p2;
reg   [2:0] n_remaining_channels_2_reg_1031;
reg   [31:0] tmp_data_V_reg_1036;
reg   [3:0] tmp_keep_V_reg_1041;
reg   [0:0] tmp_last_V_reg_1046;
reg   [1:0] tmp_dest_V_reg_1051;
wire   [31:0] zext_ln46_fu_681_p1;
reg   [31:0] zext_ln46_reg_1058;
reg   [0:0] channel_descr_enable_load_3_reg_1069;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg   [1:0] channel_descr_len_addr_reg_1082;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln53_fu_720_p1;
reg   [63:0] zext_ln53_reg_1092;
wire   [63:0] add_ln53_fu_741_p2;
reg   [63:0] add_ln53_reg_1100;
wire    ap_CS_fsm_state10;
wire   [22:0] trunc_ln53_fu_747_p1;
reg   [22:0] trunc_ln53_reg_1105;
wire   [0:0] and_ln53_fu_735_p2;
wire   [9:0] shl_ln1_fu_759_p3;
reg   [9:0] shl_ln1_reg_1113;
wire   [31:0] zext_ln117_fu_776_p1;
reg   [31:0] zext_ln117_reg_1127;
wire    ap_CS_fsm_state12;
wire   [31:0] shl_ln_fu_781_p3;
reg   [31:0] shl_ln_reg_1137;
wire    ap_CS_fsm_state13;
reg   [31:0] channel_descr_addr_load_reg_1160;
wire   [0:0] icmp_ln117_fu_807_p2;
reg   [0:0] icmp_ln117_reg_1165;
wire   [31:0] empty_64_fu_829_p3;
reg   [31:0] empty_64_reg_1169;
wire   [1:0] empty_65_fu_838_p1;
reg   [1:0] empty_65_reg_1174;
wire    ap_CS_fsm_state20;
reg   [7:0] buffer_address0;
reg    buffer_ce0;
reg    buffer_we0;
wire   [31:0] buffer_q0;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_start;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_done;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_idle;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_ready;
wire   [7:0] grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_address0;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_ce0;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_we0;
wire   [31:0] grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_d0;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_RX_stream_TREADY;
wire   [31:0] grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_data_V_2_out;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_data_V_2_out_ap_vld;
wire   [3:0] grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_keep_V_2_out;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_keep_V_2_out_ap_vld;
wire   [0:0] grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_last_V_3_out;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_last_V_3_out_ap_vld;
wire   [1:0] grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_dest_V_3_out;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_dest_V_3_out_ap_vld;
wire   [0:0] grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_channel_error_1_out;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_channel_error_1_out_ap_vld;
wire   [0:0] grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_first_1_out;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_first_1_out_ap_vld;
wire   [31:0] grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_len_remaining_2_out;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_len_remaining_2_out_ap_vld;
wire    grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_start;
wire    grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_done;
wire    grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_idle;
wire    grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_ready;
wire    grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWVALID;
wire   [31:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWADDR;
wire   [0:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWID;
wire   [31:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWLEN;
wire   [2:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWSIZE;
wire   [1:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWBURST;
wire   [1:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWLOCK;
wire   [3:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWCACHE;
wire   [2:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWPROT;
wire   [3:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWQOS;
wire   [3:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWREGION;
wire   [0:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWUSER;
wire    grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WVALID;
wire   [31:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WDATA;
wire   [3:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WSTRB;
wire    grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WLAST;
wire   [0:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WID;
wire   [0:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WUSER;
wire    grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARVALID;
wire   [31:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARADDR;
wire   [0:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARID;
wire   [31:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARLEN;
wire   [2:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARSIZE;
wire   [1:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARBURST;
wire   [1:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARLOCK;
wire   [3:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARCACHE;
wire   [2:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARPROT;
wire   [3:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARQOS;
wire   [3:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARREGION;
wire   [0:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARUSER;
wire    grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_RREADY;
wire    grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_BREADY;
wire   [7:0] grp_SimpleRxMCDMA_Pipeline_2_fu_570_buffer_r_address0;
wire    grp_SimpleRxMCDMA_Pipeline_2_fu_570_buffer_r_ce0;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_start;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_done;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_idle;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_ready;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_RX_stream_TREADY;
wire   [1:0] grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_tmp_dest_V_2_out;
wire    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_tmp_dest_V_2_out_ap_vld;
wire    flush;
reg    s_axi_s_axi_ctrl_flush_done;
wire    m_axi_mem_flush_done;
reg    mem_AWVALID;
wire    mem_AWREADY;
reg    mem_WVALID;
wire    mem_WREADY;
wire    mem_ARREADY;
wire    mem_RVALID;
wire   [31:0] mem_RDATA;
wire   [8:0] mem_RFIFONUM;
wire    mem_BVALID;
reg    mem_BREADY;
reg   [63:0] mem_transfers_reg_435;
wire    ap_CS_fsm_state15;
reg   [31:0] dataPkt_data_V_1_reg_446;
reg   [3:0] dataPkt_keep_V_1_reg_456;
reg   [0:0] dataPkt_last_V_1_reg_466;
reg   [1:0] dataPkt_dest_V_1_reg_476;
reg   [0:0] channel_error_reg_486;
reg   [0:0] first_reg_498;
reg   [31:0] len_remaining_1_reg_510;
reg   [1:0] dataPkt_dest_416_reg_520;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state16;
reg    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_start_reg;
wire    ap_CS_fsm_state11;
reg    grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_start_reg;
wire    ap_CS_fsm_state14;
reg    grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg   [1:0] tmp_dest_V_2_loc_fu_150;
wire   [31:0] zext_ln121_fu_768_p1;
wire   [31:0] zext_ln137_fu_863_p1;
wire   [7:0] add_ln118_fu_843_p2;
reg    ap_block_state14_on_subcall_done;
reg   [2:0] n_remaining_channels_fu_146;
wire    ap_CS_fsm_state21;
reg    ap_block_state6;
wire   [31:0] sub_ln186_fu_854_p2;
wire   [1:0] select_ln26_fu_606_p3;
wire   [1:0] zext_ln28_fu_603_p1;
wire   [1:0] n_remaining_channels_tot_1_fu_613_p3;
wire   [1:0] n_remaining_channels_tot_2_fu_620_p2;
wire   [2:0] zext_ln28_1_fu_634_p1;
wire   [2:0] add_ln26_fu_637_p2;
wire   [22:0] trunc_ln_fu_690_p4;
wire   [8:0] ret_V_fu_686_p1;
wire   [0:0] icmp_ln1023_fu_704_p2;
wire   [23:0] zext_ln1514_fu_700_p1;
wire   [23:0] zext_ln51_fu_710_p1;
wire   [23:0] mem_transfers_tot_fu_714_p2;
wire   [0:0] icmp_ln53_fu_724_p2;
wire   [0:0] xor_ln53_fu_729_p2;
wire   [0:0] trunc_ln117_fu_755_p1;
wire   [22:0] tmp_fu_813_p4;
wire   [0:0] icmp_fu_823_p2;
reg   [20:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    regslice_both_RX_stream_V_data_V_U_apdone_blk;
wire   [31:0] RX_stream_TDATA_int_regslice;
wire    RX_stream_TVALID_int_regslice;
reg    RX_stream_TREADY_int_regslice;
wire    regslice_both_RX_stream_V_data_V_U_ack_in;
wire    regslice_both_RX_stream_V_keep_V_U_apdone_blk;
wire   [3:0] RX_stream_TKEEP_int_regslice;
wire    regslice_both_RX_stream_V_keep_V_U_vld_out;
wire    regslice_both_RX_stream_V_keep_V_U_ack_in;
wire    regslice_both_RX_stream_V_strb_V_U_apdone_blk;
wire   [3:0] RX_stream_TSTRB_int_regslice;
wire    regslice_both_RX_stream_V_strb_V_U_vld_out;
wire    regslice_both_RX_stream_V_strb_V_U_ack_in;
wire    regslice_both_RX_stream_V_last_V_U_apdone_blk;
wire   [0:0] RX_stream_TLAST_int_regslice;
wire    regslice_both_RX_stream_V_last_V_U_vld_out;
wire    regslice_both_RX_stream_V_last_V_U_ack_in;
wire    regslice_both_RX_stream_V_dest_V_U_apdone_blk;
wire   [1:0] RX_stream_TDEST_int_regslice;
wire    regslice_both_RX_stream_V_dest_V_U_vld_out;
wire    regslice_both_RX_stream_V_dest_V_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 buffer_index = 8'd0;
#0 grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_start_reg = 1'b0;
#0 grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_start_reg = 1'b0;
#0 grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_start_reg = 1'b0;
end

SimpleRxMCDMA_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_address0),
    .ce0(buffer_ce0),
    .we0(buffer_we0),
    .d0(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_d0),
    .q0(buffer_q0)
);

SimpleRxMCDMA_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4 grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_start),
    .ap_done(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_done),
    .ap_idle(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_idle),
    .ap_ready(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_ready),
    .RX_stream_TVALID(RX_stream_TVALID_int_regslice),
    .dataPkt_data_V_1(dataPkt_data_V_1_reg_446),
    .dataPkt_keep_V_1(dataPkt_keep_V_1_reg_456),
    .dataPkt_last_V_1(dataPkt_last_V_1_reg_466),
    .dataPkt_dest_V_1(dataPkt_dest_V_1_reg_476),
    .channel_error(channel_error_reg_486),
    .first(first_reg_498),
    .len_remaining_1(len_remaining_1_reg_510),
    .shl_ln1(shl_ln1_reg_1113),
    .buffer_r_address0(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_address0),
    .buffer_r_ce0(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_ce0),
    .buffer_r_we0(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_we0),
    .buffer_r_d0(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_d0),
    .RX_stream_TDATA(RX_stream_TDATA_int_regslice),
    .RX_stream_TREADY(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_RX_stream_TREADY),
    .RX_stream_TKEEP(RX_stream_TKEEP_int_regslice),
    .RX_stream_TSTRB(RX_stream_TSTRB_int_regslice),
    .RX_stream_TLAST(RX_stream_TLAST_int_regslice),
    .RX_stream_TDEST(RX_stream_TDEST_int_regslice),
    .tmp_dest_V(tmp_dest_V_reg_1051),
    .dataPkt_data_V_2_out(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_data_V_2_out),
    .dataPkt_data_V_2_out_ap_vld(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_data_V_2_out_ap_vld),
    .dataPkt_keep_V_2_out(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_keep_V_2_out),
    .dataPkt_keep_V_2_out_ap_vld(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_keep_V_2_out_ap_vld),
    .dataPkt_last_V_3_out(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_last_V_3_out),
    .dataPkt_last_V_3_out_ap_vld(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_last_V_3_out_ap_vld),
    .dataPkt_dest_V_3_out(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_dest_V_3_out),
    .dataPkt_dest_V_3_out_ap_vld(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_dest_V_3_out_ap_vld),
    .channel_error_1_out(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_channel_error_1_out),
    .channel_error_1_out_ap_vld(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_channel_error_1_out_ap_vld),
    .first_1_out(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_first_1_out),
    .first_1_out_ap_vld(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_first_1_out_ap_vld),
    .len_remaining_2_out(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_len_remaining_2_out),
    .len_remaining_2_out_ap_vld(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_len_remaining_2_out_ap_vld)
);

SimpleRxMCDMA_SimpleRxMCDMA_Pipeline_2 grp_SimpleRxMCDMA_Pipeline_2_fu_570(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_start),
    .ap_done(grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_done),
    .ap_idle(grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_idle),
    .ap_ready(grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_ready),
    .m_axi_mem_AWVALID(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(mem_AWREADY),
    .m_axi_mem_AWADDR(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(mem_WREADY),
    .m_axi_mem_WDATA(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(1'b0),
    .m_axi_mem_ARADDR(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(1'b0),
    .m_axi_mem_RREADY(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(32'd0),
    .m_axi_mem_RLAST(1'b0),
    .m_axi_mem_RID(1'd0),
    .m_axi_mem_RFIFONUM(9'd0),
    .m_axi_mem_RUSER(1'd0),
    .m_axi_mem_RRESP(2'd0),
    .m_axi_mem_BVALID(mem_BVALID),
    .m_axi_mem_BREADY(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(2'd0),
    .m_axi_mem_BID(1'd0),
    .m_axi_mem_BUSER(1'd0),
    .shl_ln1(shl_ln1_reg_1113),
    .buffer_r_address0(grp_SimpleRxMCDMA_Pipeline_2_fu_570_buffer_r_address0),
    .buffer_r_ce0(grp_SimpleRxMCDMA_Pipeline_2_fu_570_buffer_r_ce0),
    .buffer_r_q0(buffer_q0),
    .shl_ln(shl_ln_reg_1137),
    .channel_descr_addr_load(channel_descr_addr_load_reg_1160),
    .channel_descr_addr_load_cast(empty_65_reg_1174),
    .p_cast23(empty_64_reg_1169)
);

SimpleRxMCDMA_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5 grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_start),
    .ap_done(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_done),
    .ap_idle(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_idle),
    .ap_ready(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_ready),
    .RX_stream_TVALID(RX_stream_TVALID_int_regslice),
    .RX_stream_TDATA(RX_stream_TDATA_int_regslice),
    .RX_stream_TREADY(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_RX_stream_TREADY),
    .RX_stream_TKEEP(RX_stream_TKEEP_int_regslice),
    .RX_stream_TSTRB(RX_stream_TSTRB_int_regslice),
    .RX_stream_TLAST(RX_stream_TLAST_int_regslice),
    .RX_stream_TDEST(RX_stream_TDEST_int_regslice),
    .tmp_dest_V_2_out(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_tmp_dest_V_2_out),
    .tmp_dest_V_2_out_ap_vld(grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_tmp_dest_V_2_out_ap_vld)
);

SimpleRxMCDMA_s_axi_ctrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_S_AXI_CTRL_DATA_WIDTH ))
s_axi_ctrl_s_axi_U(
    .AWVALID(s_axi_s_axi_ctrl_AWVALID),
    .AWREADY(s_axi_s_axi_ctrl_AWREADY),
    .AWADDR(s_axi_s_axi_ctrl_AWADDR),
    .WVALID(s_axi_s_axi_ctrl_WVALID),
    .WREADY(s_axi_s_axi_ctrl_WREADY),
    .WDATA(s_axi_s_axi_ctrl_WDATA),
    .WSTRB(s_axi_s_axi_ctrl_WSTRB),
    .ARVALID(s_axi_s_axi_ctrl_ARVALID),
    .ARREADY(s_axi_s_axi_ctrl_ARREADY),
    .ARADDR(s_axi_s_axi_ctrl_ARADDR),
    .RVALID(s_axi_s_axi_ctrl_RVALID),
    .RREADY(s_axi_s_axi_ctrl_RREADY),
    .RDATA(s_axi_s_axi_ctrl_RDATA),
    .RRESP(s_axi_s_axi_ctrl_RRESP),
    .BVALID(s_axi_s_axi_ctrl_BVALID),
    .BREADY(s_axi_s_axi_ctrl_BREADY),
    .BRESP(s_axi_s_axi_ctrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .sw_reset(ap_rst_sw),
    .ACLK_EN(1'b1),
    .channel_descr_addr_address0(channel_descr_addr_address0),
    .channel_descr_addr_ce0(channel_descr_addr_ce0),
    .channel_descr_addr_q0(channel_descr_addr_q0),
    .channel_descr_len_address0(channel_descr_len_address0),
    .channel_descr_len_ce0(channel_descr_len_ce0),
    .channel_descr_len_q0(channel_descr_len_q0),
    .channel_descr_enable_address0(channel_descr_enable_address0),
    .channel_descr_enable_ce0(channel_descr_enable_ce0),
    .channel_descr_enable_q0(channel_descr_enable_q0),
    .channel_descr_done_address0(channel_descr_done_address0),
    .channel_descr_done_ce0(channel_descr_done_ce0),
    .channel_descr_done_we0(channel_descr_done_we0),
    .channel_descr_done_d0(channel_descr_done_d0),
    .channel_descr_done_q0(channel_descr_done_q0),
    .channel_descr_error_address0(channel_descr_error_address0),
    .channel_descr_error_ce0(channel_descr_error_ce0),
    .channel_descr_error_we0(channel_descr_error_we0),
    .channel_descr_error_d0(channel_descr_error_d0),
    .channel_descr_transfered_data_address0(channel_descr_transfered_data_address0),
    .channel_descr_transfered_data_ce0(channel_descr_transfered_data_ce0),
    .channel_descr_transfered_data_we0(channel_descr_transfered_data_we0),
    .channel_descr_transfered_data_d0(channel_descr_transfered_data_d0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .flush(flush),
    .flush_done(s_axi_s_axi_ctrl_flush_done)
);

SimpleRxMCDMA_mem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 128 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MEM_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_MEM_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_MEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MEM_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
mem_m_axi_U(
    .AWVALID(m_axi_mem_AWVALID),
    .AWREADY(m_axi_mem_AWREADY),
    .AWADDR(m_axi_mem_AWADDR),
    .AWID(m_axi_mem_AWID),
    .AWLEN(m_axi_mem_AWLEN),
    .AWSIZE(m_axi_mem_AWSIZE),
    .AWBURST(m_axi_mem_AWBURST),
    .AWLOCK(m_axi_mem_AWLOCK),
    .AWCACHE(m_axi_mem_AWCACHE),
    .AWPROT(m_axi_mem_AWPROT),
    .AWQOS(m_axi_mem_AWQOS),
    .AWREGION(m_axi_mem_AWREGION),
    .AWUSER(m_axi_mem_AWUSER),
    .WVALID(m_axi_mem_WVALID),
    .WREADY(m_axi_mem_WREADY),
    .WDATA(m_axi_mem_WDATA),
    .WSTRB(m_axi_mem_WSTRB),
    .WLAST(m_axi_mem_WLAST),
    .WID(m_axi_mem_WID),
    .WUSER(m_axi_mem_WUSER),
    .ARVALID(m_axi_mem_ARVALID),
    .ARREADY(m_axi_mem_ARREADY),
    .ARADDR(m_axi_mem_ARADDR),
    .ARID(m_axi_mem_ARID),
    .ARLEN(m_axi_mem_ARLEN),
    .ARSIZE(m_axi_mem_ARSIZE),
    .ARBURST(m_axi_mem_ARBURST),
    .ARLOCK(m_axi_mem_ARLOCK),
    .ARCACHE(m_axi_mem_ARCACHE),
    .ARPROT(m_axi_mem_ARPROT),
    .ARQOS(m_axi_mem_ARQOS),
    .ARREGION(m_axi_mem_ARREGION),
    .ARUSER(m_axi_mem_ARUSER),
    .RVALID(m_axi_mem_RVALID),
    .RREADY(m_axi_mem_RREADY),
    .RDATA(m_axi_mem_RDATA),
    .RLAST(m_axi_mem_RLAST),
    .RID(m_axi_mem_RID),
    .RUSER(m_axi_mem_RUSER),
    .RRESP(m_axi_mem_RRESP),
    .BVALID(m_axi_mem_BVALID),
    .BREADY(m_axi_mem_BREADY),
    .BRESP(m_axi_mem_BRESP),
    .BID(m_axi_mem_BID),
    .BUSER(m_axi_mem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .flush(flush),
    .flush_done(m_axi_mem_flush_done),
    .I_ARVALID(1'b0),
    .I_ARREADY(mem_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(mem_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(mem_RDATA),
    .I_RFIFONUM(mem_RFIFONUM),
    .I_AWVALID(mem_AWVALID),
    .I_AWREADY(mem_AWREADY),
    .I_AWADDR(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWADDR),
    .I_AWLEN(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWLEN),
    .I_WVALID(mem_WVALID),
    .I_WREADY(mem_WREADY),
    .I_WDATA(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WDATA),
    .I_WSTRB(grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WSTRB),
    .I_BVALID(mem_BVALID),
    .I_BREADY(mem_BREADY)
);

SimpleRxMCDMA_regslice_both #(
    .DataWidth( 32 ))
regslice_both_RX_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(RX_stream_TDATA),
    .vld_in(RX_stream_TVALID),
    .ack_in(regslice_both_RX_stream_V_data_V_U_ack_in),
    .data_out(RX_stream_TDATA_int_regslice),
    .vld_out(RX_stream_TVALID_int_regslice),
    .ack_out(RX_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_RX_stream_V_data_V_U_apdone_blk)
);

SimpleRxMCDMA_regslice_both #(
    .DataWidth( 4 ))
regslice_both_RX_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(RX_stream_TKEEP),
    .vld_in(RX_stream_TVALID),
    .ack_in(regslice_both_RX_stream_V_keep_V_U_ack_in),
    .data_out(RX_stream_TKEEP_int_regslice),
    .vld_out(regslice_both_RX_stream_V_keep_V_U_vld_out),
    .ack_out(RX_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_RX_stream_V_keep_V_U_apdone_blk)
);

SimpleRxMCDMA_regslice_both #(
    .DataWidth( 4 ))
regslice_both_RX_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(RX_stream_TSTRB),
    .vld_in(RX_stream_TVALID),
    .ack_in(regslice_both_RX_stream_V_strb_V_U_ack_in),
    .data_out(RX_stream_TSTRB_int_regslice),
    .vld_out(regslice_both_RX_stream_V_strb_V_U_vld_out),
    .ack_out(RX_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_RX_stream_V_strb_V_U_apdone_blk)
);

SimpleRxMCDMA_regslice_both #(
    .DataWidth( 1 ))
regslice_both_RX_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(RX_stream_TLAST),
    .vld_in(RX_stream_TVALID),
    .ack_in(regslice_both_RX_stream_V_last_V_U_ack_in),
    .data_out(RX_stream_TLAST_int_regslice),
    .vld_out(regslice_both_RX_stream_V_last_V_U_vld_out),
    .ack_out(RX_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_RX_stream_V_last_V_U_apdone_blk)
);

SimpleRxMCDMA_regslice_both #(
    .DataWidth( 2 ))
regslice_both_RX_stream_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(RX_stream_TDEST),
    .vld_in(RX_stream_TVALID),
    .ack_in(regslice_both_RX_stream_V_dest_V_U_ack_in),
    .data_out(RX_stream_TDEST_int_regslice),
    .vld_out(regslice_both_RX_stream_V_dest_V_U_vld_out),
    .ack_out(RX_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_RX_stream_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln117_fu_807_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
            grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_start_reg <= 1'b1;
        end else if ((grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_ready == 1'b1)) begin
            grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_start_reg <= 1'b1;
        end else if ((grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_ready == 1'b1)) begin
            grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_start_reg <= 1'b0;
    end else begin
        if (((1'd1 == and_ln53_fu_735_p2) & (1'b1 == ap_CS_fsm_state10))) begin
            grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_start_reg <= 1'b1;
        end else if ((grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_ready == 1'b1)) begin
            grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        channel_error_reg_486 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        channel_error_reg_486 <= grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_channel_error_1_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dataPkt_data_V_1_reg_446 <= tmp_data_V_reg_1036;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        dataPkt_data_V_1_reg_446 <= grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_data_V_2_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (((channel_descr_enable_load_3_reg_1069 == 1'd0) & (tmp_last_V_reg_1046 == 1'd1)) | ((tmp_last_V_reg_1046 == 1'd1) & (channel_descr_done_q0 == 1'd1))))) begin
        dataPkt_dest_416_reg_520 <= tmp_dest_V_reg_1051;
    end else if (((channel_error_reg_486 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        dataPkt_dest_416_reg_520 <= dataPkt_dest_V_1_reg_476;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dataPkt_dest_416_reg_520 <= tmp_dest_V_2_loc_fu_150;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dataPkt_dest_V_1_reg_476 <= tmp_dest_V_reg_1051;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        dataPkt_dest_V_1_reg_476 <= grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_dest_V_3_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dataPkt_keep_V_1_reg_456 <= tmp_keep_V_reg_1041;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        dataPkt_keep_V_1_reg_456 <= grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_keep_V_2_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dataPkt_last_V_1_reg_466 <= tmp_last_V_reg_1046;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        dataPkt_last_V_1_reg_466 <= grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_last_V_3_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        first_reg_498 <= 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        first_reg_498 <= grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_first_1_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        len_remaining_1_reg_510 <= channel_descr_len_q0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        len_remaining_1_reg_510 <= grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_len_remaining_2_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        mem_transfers_reg_435 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        mem_transfers_reg_435 <= add_ln53_reg_1100;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        n_remaining_channels_fu_146 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        n_remaining_channels_fu_146 <= n_remaining_channels_2_reg_1031;
    end
end

always @ (posedge ap_clk) begin
    s_axi_s_axi_ctrl_flush_done <= m_axi_mem_flush_done;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln53_reg_1100 <= add_ln53_fu_741_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        buffer_index <= add_ln118_fu_843_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        channel_descr_addr_load_reg_1160 <= channel_descr_addr_q0;
        icmp_ln117_reg_1165 <= icmp_ln117_fu_807_p2;
        shl_ln_reg_1137[31 : 9] <= shl_ln_fu_781_p3[31 : 9];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        channel_descr_enable_load_3_reg_1069 <= channel_descr_enable_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_descr_enable_load_reg_973 <= channel_descr_enable_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((channel_descr_enable_load_3_reg_1069 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (channel_descr_done_q0 == 1'd0))) begin
        channel_descr_len_addr_reg_1082 <= zext_ln46_reg_1058;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln117_fu_807_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        empty_64_reg_1169 <= empty_64_fu_829_p3;
        empty_65_reg_1174 <= empty_65_fu_838_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        n_remaining_channels_2_reg_1031 <= n_remaining_channels_2_fu_659_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        n_remaining_channels_tot_3_reg_998 <= n_remaining_channels_tot_3_fu_626_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        n_remaining_channels_tot_4_reg_1023 <= n_remaining_channels_tot_4_fu_643_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        n_remaining_channels_tot_reg_947 <= channel_descr_enable_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln53_fu_735_p2) & (1'b1 == ap_CS_fsm_state10))) begin
        shl_ln1_reg_1113[9] <= shl_ln1_fu_759_p3[9];
        trunc_ln53_reg_1105 <= trunc_ln53_fu_747_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln34_fu_654_p2 == 1'd0))) begin
        tmp_data_V_reg_1036 <= RX_stream_TDATA_int_regslice;
        tmp_dest_V_reg_1051 <= RX_stream_TDEST_int_regslice;
        tmp_keep_V_reg_1041 <= RX_stream_TKEEP_int_regslice;
        tmp_last_V_reg_1046 <= RX_stream_TLAST_int_regslice;
        zext_ln46_reg_1058[1 : 0] <= zext_ln46_fu_681_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_tmp_dest_V_2_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        tmp_dest_V_2_loc_fu_150 <= grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_tmp_dest_V_2_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        zext_ln117_reg_1127[1 : 0] <= zext_ln117_fu_776_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        zext_ln53_reg_1092[23 : 0] <= zext_ln53_fu_720_p1[23 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln34_fu_654_p2 == 1'd0))) begin
        RX_stream_TDATA_blk_n = RX_stream_TVALID_int_regslice;
    end else begin
        RX_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == RX_stream_TVALID_int_regslice) & (icmp_ln34_fu_654_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln34_fu_654_p2 == 1'd0))) begin
        RX_stream_TREADY_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        RX_stream_TREADY_int_regslice = grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_RX_stream_TREADY;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        RX_stream_TREADY_int_regslice = grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_RX_stream_TREADY;
    end else begin
        RX_stream_TREADY_int_regslice = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state14_on_subcall_done)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_done == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == RX_stream_TVALID_int_regslice) & (icmp_ln34_fu_654_p2 == 1'd0))) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((1'b0 == RX_stream_TVALID_int_regslice) & (icmp_ln34_fu_654_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln34_fu_654_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == RX_stream_TVALID_int_regslice) & (icmp_ln34_fu_654_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln34_fu_654_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_reg_1165 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        buffer_address0 = grp_SimpleRxMCDMA_Pipeline_2_fu_570_buffer_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        buffer_address0 = grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_address0;
    end else begin
        buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln117_reg_1165 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        buffer_ce0 = grp_SimpleRxMCDMA_Pipeline_2_fu_570_buffer_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        buffer_ce0 = grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_ce0;
    end else begin
        buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        buffer_we0 = grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_buffer_r_we0;
    end else begin
        buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        channel_descr_addr_ce0 = 1'b1;
    end else begin
        channel_descr_addr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        channel_descr_done_address0 = zext_ln121_fu_768_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        channel_descr_done_address0 = zext_ln46_reg_1058;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        channel_descr_done_address0 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_descr_done_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        channel_descr_done_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        channel_descr_done_address0 = 32'd0;
    end else begin
        channel_descr_done_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        channel_descr_done_ce0 = 1'b1;
    end else begin
        channel_descr_done_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        channel_descr_done_d0 = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        channel_descr_done_d0 = 1'd0;
    end else begin
        channel_descr_done_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state10) & (1'd0 == and_ln53_fu_735_p2)))) begin
        channel_descr_done_we0 = 1'b1;
    end else begin
        channel_descr_done_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        channel_descr_enable_address0 = zext_ln46_fu_681_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        channel_descr_enable_address0 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_descr_enable_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        channel_descr_enable_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        channel_descr_enable_address0 = 32'd0;
    end else begin
        channel_descr_enable_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((1'b0 == RX_stream_TVALID_int_regslice) & (icmp_ln34_fu_654_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state6)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        channel_descr_enable_ce0 = 1'b1;
    end else begin
        channel_descr_enable_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        channel_descr_error_address0 = zext_ln137_fu_863_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        channel_descr_error_address0 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_descr_error_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        channel_descr_error_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        channel_descr_error_address0 = 32'd0;
    end else begin
        channel_descr_error_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        channel_descr_error_ce0 = 1'b1;
    end else begin
        channel_descr_error_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        channel_descr_error_d0 = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        channel_descr_error_d0 = 1'd0;
    end else begin
        channel_descr_error_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        channel_descr_error_we0 = 1'b1;
    end else begin
        channel_descr_error_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        channel_descr_len_address0 = channel_descr_len_addr_reg_1082;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        channel_descr_len_address0 = zext_ln46_reg_1058;
    end else begin
        channel_descr_len_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)))) begin
        channel_descr_len_ce0 = 1'b1;
    end else begin
        channel_descr_len_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        channel_descr_transfered_data_address0 = zext_ln117_reg_1127;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        channel_descr_transfered_data_address0 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_descr_transfered_data_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        channel_descr_transfered_data_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        channel_descr_transfered_data_address0 = 32'd0;
    end else begin
        channel_descr_transfered_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        channel_descr_transfered_data_ce0 = 1'b1;
    end else begin
        channel_descr_transfered_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        channel_descr_transfered_data_d0 = sub_ln186_fu_854_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        channel_descr_transfered_data_d0 = 32'd0;
    end else begin
        channel_descr_transfered_data_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        channel_descr_transfered_data_we0 = 1'b1;
    end else begin
        channel_descr_transfered_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln117_reg_1165 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln117_fu_807_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        mem_AWVALID = grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_AWVALID;
    end else begin
        mem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln117_reg_1165 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln117_fu_807_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        mem_BREADY = grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_BREADY;
    end else begin
        mem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln117_reg_1165 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln117_fu_807_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        mem_WVALID = grp_SimpleRxMCDMA_Pipeline_2_fu_570_m_axi_mem_WVALID;
    end else begin
        mem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if ((~((1'b0 == RX_stream_TVALID_int_regslice) & (icmp_ln34_fu_654_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln34_fu_654_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((1'b0 == RX_stream_TVALID_int_regslice) & (icmp_ln34_fu_654_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln34_fu_654_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (((channel_descr_enable_load_3_reg_1069 == 1'd0) & (tmp_last_V_reg_1046 == 1'd1)) | ((tmp_last_V_reg_1046 == 1'd1) & (channel_descr_done_q0 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((1'b1 == ap_CS_fsm_state8) & (((tmp_last_V_reg_1046 == 1'd0) & (channel_descr_done_q0 == 1'd1)) | ((channel_descr_enable_load_3_reg_1069 == 1'd0) & (tmp_last_V_reg_1046 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'd0 == and_ln53_fu_735_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state16 : begin
            if (((channel_error_reg_486 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign RX_stream_TREADY = regslice_both_RX_stream_V_data_V_U_ack_in;

assign add_ln118_fu_843_p2 = (buffer_index + 8'd1);

assign add_ln26_fu_637_p2 = (zext_ln28_1_fu_634_p1 + 3'd1);

assign add_ln53_fu_741_p2 = (mem_transfers_reg_435 + 64'd1);

assign and_ln53_fu_735_p2 = (xor_ln53_fu_729_p2 & icmp_ln53_fu_724_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_done == 1'b0) & (icmp_ln117_reg_1165 == 1'd0));
end

always @ (*) begin
    ap_block_state6 = ((1'b0 == RX_stream_TVALID_int_regslice) & (icmp_ln34_fu_654_p2 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = (~ap_rst_n | ap_rst_sw);
end

assign channel_descr_addr_address0 = zext_ln117_fu_776_p1;

assign empty_64_fu_829_p3 = ((icmp_fu_823_p2[0:0] == 1'b1) ? len_remaining_1_reg_510 : 32'd512);

assign empty_65_fu_838_p1 = channel_descr_addr_q0[1:0];

assign grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_start = grp_SimpleRxMCDMA_Pipeline_2_fu_570_ap_start_reg;

assign grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_start = grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_128_5_fu_583_ap_start_reg;

assign grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_start = grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_ap_start_reg;

assign icmp_fu_823_p2 = (($signed(tmp_fu_813_p4) < $signed(23'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1023_fu_704_p2 = ((ret_V_fu_686_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_807_p2 = ((len_remaining_1_reg_510 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_654_p2 = ((n_remaining_channels_fu_146 == n_remaining_channels_tot_4_reg_1023) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_724_p2 = (($signed(mem_transfers_reg_435) < $signed(zext_ln53_reg_1092)) ? 1'b1 : 1'b0);

assign mem_transfers_tot_fu_714_p2 = (zext_ln1514_fu_700_p1 + zext_ln51_fu_710_p1);

assign n_remaining_channels_2_fu_659_p2 = (n_remaining_channels_fu_146 + 3'd1);

assign n_remaining_channels_tot_1_fu_613_p3 = ((channel_descr_enable_load_reg_973[0:0] == 1'b1) ? select_ln26_fu_606_p3 : zext_ln28_fu_603_p1);

assign n_remaining_channels_tot_2_fu_620_p2 = (n_remaining_channels_tot_1_fu_613_p3 + 2'd1);

assign n_remaining_channels_tot_3_fu_626_p3 = ((channel_descr_enable_q0[0:0] == 1'b1) ? n_remaining_channels_tot_2_fu_620_p2 : n_remaining_channels_tot_1_fu_613_p3);

assign n_remaining_channels_tot_4_fu_643_p3 = ((channel_descr_enable_q0[0:0] == 1'b1) ? add_ln26_fu_637_p2 : zext_ln28_1_fu_634_p1);

assign ret_V_fu_686_p1 = channel_descr_len_q0[8:0];

assign select_ln26_fu_606_p3 = ((n_remaining_channels_tot_reg_947[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign shl_ln1_fu_759_p3 = {{trunc_ln117_fu_755_p1}, {9'd0}};

assign shl_ln_fu_781_p3 = {{trunc_ln53_reg_1105}, {9'd0}};

assign sub_ln186_fu_854_p2 = (channel_descr_len_q0 - grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_len_remaining_2_out);

assign tmp_fu_813_p4 = {{len_remaining_1_reg_510[31:9]}};

assign trunc_ln117_fu_755_p1 = buffer_index[0:0];

assign trunc_ln53_fu_747_p1 = mem_transfers_reg_435[22:0];

assign trunc_ln_fu_690_p4 = {{channel_descr_len_q0[31:9]}};

assign xor_ln53_fu_729_p2 = (channel_error_reg_486 ^ 1'd1);

assign zext_ln117_fu_776_p1 = grp_SimpleRxMCDMA_Pipeline_VITIS_LOOP_57_4_fu_532_dataPkt_dest_V_3_out;

assign zext_ln121_fu_768_p1 = dataPkt_dest_V_1_reg_476;

assign zext_ln137_fu_863_p1 = dataPkt_dest_416_reg_520;

assign zext_ln1514_fu_700_p1 = trunc_ln_fu_690_p4;

assign zext_ln28_1_fu_634_p1 = n_remaining_channels_tot_3_reg_998;

assign zext_ln28_fu_603_p1 = n_remaining_channels_tot_reg_947;

assign zext_ln46_fu_681_p1 = RX_stream_TDEST_int_regslice;

assign zext_ln51_fu_710_p1 = icmp_ln1023_fu_704_p2;

assign zext_ln53_fu_720_p1 = mem_transfers_tot_fu_714_p2;

always @ (posedge ap_clk) begin
    zext_ln46_reg_1058[31:2] <= 30'b000000000000000000000000000000;
    zext_ln53_reg_1092[63:24] <= 40'b0000000000000000000000000000000000000000;
    shl_ln1_reg_1113[8:0] <= 9'b000000000;
    zext_ln117_reg_1127[31:2] <= 30'b000000000000000000000000000000;
    shl_ln_reg_1137[8:0] <= 9'b000000000;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "SimpleRxMCDMA_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //SimpleRxMCDMA

