// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SimpleTxMCDMA_SimpleTxMCDMA,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku040-ffva1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=1494,HLS_SYN_LUT=3442,HLS_VERSION=2022_2}" *)

module SimpleTxMCDMA (
        ap_clk,
        ap_rst_n,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        TX_stream_TDATA,
        TX_stream_TVALID,
        TX_stream_TREADY,
        TX_stream_TKEEP,
        TX_stream_TSTRB,
        TX_stream_TLAST,
        TX_stream_TDEST,
        s_axi_s_axi_ctrl_AWVALID,
        s_axi_s_axi_ctrl_AWREADY,
        s_axi_s_axi_ctrl_AWADDR,
        s_axi_s_axi_ctrl_WVALID,
        s_axi_s_axi_ctrl_WREADY,
        s_axi_s_axi_ctrl_WDATA,
        s_axi_s_axi_ctrl_WSTRB,
        s_axi_s_axi_ctrl_ARVALID,
        s_axi_s_axi_ctrl_ARREADY,
        s_axi_s_axi_ctrl_ARADDR,
        s_axi_s_axi_ctrl_RVALID,
        s_axi_s_axi_ctrl_RREADY,
        s_axi_s_axi_ctrl_RDATA,
        s_axi_s_axi_ctrl_RRESP,
        s_axi_s_axi_ctrl_BVALID,
        s_axi_s_axi_ctrl_BREADY,
        s_axi_s_axi_ctrl_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_pp0_stage0 = 8'd64;
parameter    ap_ST_fsm_state10 = 8'd128;
parameter    C_S_AXI_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_ID_WIDTH = 1;
parameter    C_M_AXI_MEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_MEM_DATA_WIDTH = 32;
parameter    C_M_AXI_MEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_MEM_TARGET_ADDR = 0;
parameter    C_M_AXI_MEM_USER_VALUE = 0;
parameter    C_M_AXI_MEM_PROT_VALUE = 0;
parameter    C_M_AXI_MEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1:0] m_axi_mem_AWADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_AWID;
output  [7:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [C_M_AXI_MEM_AWUSER_WIDTH - 1:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [C_M_AXI_MEM_DATA_WIDTH - 1:0] m_axi_mem_WDATA;
output  [C_M_AXI_MEM_WSTRB_WIDTH - 1:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_WID;
output  [C_M_AXI_MEM_WUSER_WIDTH - 1:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [C_M_AXI_MEM_ADDR_WIDTH - 1:0] m_axi_mem_ARADDR;
output  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_ARID;
output  [7:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [C_M_AXI_MEM_ARUSER_WIDTH - 1:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [C_M_AXI_MEM_DATA_WIDTH - 1:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_RID;
input  [C_M_AXI_MEM_RUSER_WIDTH - 1:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [C_M_AXI_MEM_ID_WIDTH - 1:0] m_axi_mem_BID;
input  [C_M_AXI_MEM_BUSER_WIDTH - 1:0] m_axi_mem_BUSER;
output  [31:0] TX_stream_TDATA;
output   TX_stream_TVALID;
input   TX_stream_TREADY;
output  [3:0] TX_stream_TKEEP;
output  [3:0] TX_stream_TSTRB;
output  [0:0] TX_stream_TLAST;
output  [1:0] TX_stream_TDEST;
input   s_axi_s_axi_ctrl_AWVALID;
output   s_axi_s_axi_ctrl_AWREADY;
input  [C_S_AXI_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_s_axi_ctrl_AWADDR;
input   s_axi_s_axi_ctrl_WVALID;
output   s_axi_s_axi_ctrl_WREADY;
input  [C_S_AXI_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_s_axi_ctrl_WDATA;
input  [C_S_AXI_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_s_axi_ctrl_WSTRB;
input   s_axi_s_axi_ctrl_ARVALID;
output   s_axi_s_axi_ctrl_ARREADY;
input  [C_S_AXI_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_s_axi_ctrl_ARADDR;
output   s_axi_s_axi_ctrl_RVALID;
input   s_axi_s_axi_ctrl_RREADY;
output  [C_S_AXI_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_s_axi_ctrl_RDATA;
output  [1:0] s_axi_s_axi_ctrl_RRESP;
output   s_axi_s_axi_ctrl_BVALID;
input   s_axi_s_axi_ctrl_BREADY;
output  [1:0] s_axi_s_axi_ctrl_BRESP;
output   interrupt;

wire    ap_rst_sw;
 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [1:0] channel_descr_addr_address0;
reg    channel_descr_addr_ce0;
wire   [31:0] channel_descr_addr_q0;
wire   [1:0] channel_descr_len_address0;
reg    channel_descr_len_ce0;
wire   [31:0] channel_descr_len_q0;
wire   [1:0] channel_descr_enable_address0;
reg    channel_descr_enable_ce0;
wire   [0:0] channel_descr_enable_q0;
wire   [2:0] SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_address0;
reg    SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_ce0;
wire   [31:0] SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_q0;
wire   [2:0] keep_table_address0;
reg    keep_table_ce0;
wire   [3:0] keep_table_q0;
reg    TX_stream_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] len_remaining_13_reg_292;
reg   [29:0] len2_reg_304;
wire   [31:0] zext_ln24_fu_326_p1;
reg   [31:0] zext_ln24_reg_582;
wire    ap_CS_fsm_state2;
wire   [1:0] i_fu_331_p2;
reg   [1:0] i_reg_593;
reg   [0:0] channel_descr_enable_load_reg_598;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [31:0] channel_descr_addr_load_reg_617;
wire   [23:0] add_ln30_fu_365_p2;
reg   [23:0] add_ln30_reg_623;
wire   [0:0] icmp_ln30_1_fu_371_p2;
reg   [0:0] icmp_ln30_1_reg_628;
wire   [22:0] trunc_ln26_fu_377_p1;
reg   [22:0] trunc_ln26_reg_632;
wire    ap_CS_fsm_state5;
wire   [9:0] shl_ln_fu_386_p3;
reg   [9:0] shl_ln_reg_637;
wire   [1:0] empty_60_fu_395_p1;
reg   [1:0] empty_60_reg_643;
wire   [23:0] mem_transfers_fu_399_p2;
reg   [23:0] mem_transfers_reg_648;
wire    ap_CS_fsm_state6;
wire   [29:0] select_ln33_fu_459_p3;
reg   [29:0] select_ln33_reg_654;
wire   [31:0] len_remaining_4_fu_475_p2;
reg   [31:0] len_remaining_4_reg_659;
wire    grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_done;
wire   [0:0] icmp_ln33_1_fu_481_p2;
wire    ap_block_state7_pp0_stage0_iter0;
reg    ap_block_state8_pp0_stage0_iter1;
reg    ap_block_state9_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] dataPkt_last_V_fu_519_p2;
reg   [0:0] dataPkt_last_V_reg_673;
wire   [29:0] len_fu_525_p2;
reg   [29:0] len_reg_690;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] len_remaining_3_fu_531_p2;
reg   [31:0] len_remaining_3_reg_695;
wire   [0:0] icmp_ln33_fu_537_p2;
reg   [0:0] icmp_ln33_reg_700;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg   [7:0] buffer_address0;
reg    buffer_ce0;
reg   [3:0] buffer_we0;
wire   [31:0] buffer_q0;
wire    grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_start;
wire    grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_idle;
wire    grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_ready;
wire    grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWVALID;
wire   [31:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWADDR;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWID;
wire   [31:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWLEN;
wire   [2:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWSIZE;
wire   [1:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWBURST;
wire   [1:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWLOCK;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWCACHE;
wire   [2:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWPROT;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWQOS;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWREGION;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWUSER;
wire    grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WVALID;
wire   [31:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WDATA;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WSTRB;
wire    grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WLAST;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WID;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WUSER;
wire    grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARVALID;
wire   [31:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARADDR;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARID;
wire   [31:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARLEN;
wire   [2:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARSIZE;
wire   [1:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARBURST;
wire   [1:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARLOCK;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARCACHE;
wire   [2:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARPROT;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARQOS;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARREGION;
wire   [0:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARUSER;
wire    grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_RREADY;
wire    grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_BREADY;
wire   [7:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_address0;
wire    grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_ce0;
wire   [3:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_we0;
wire   [31:0] grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_d0;
wire    flush;
reg    s_axi_s_axi_ctrl_flush_done;
wire    m_axi_mem_flush_done;
wire    mem_AWREADY;
wire    mem_WREADY;
reg    mem_ARVALID;
wire    mem_ARREADY;
wire    mem_RVALID;
reg    mem_RREADY;
wire   [31:0] mem_RDATA;
wire   [11:0] mem_RFIFONUM;
wire    mem_BVALID;
reg   [1:0] dataPkt_dest_V_reg_257;
wire    ap_CS_fsm_state10;
wire    regslice_both_TX_stream_V_data_V_U_apdone_blk;
wire   [0:0] icmp_ln30_fu_572_p2;
wire   [0:0] icmp_ln22_fu_576_p2;
reg   [23:0] mem_transfers5_reg_270;
reg   [31:0] len_remaining_26_reg_282;
reg   [31:0] ap_phi_mux_len_remaining_13_phi_fu_295_p4;
reg   [29:0] ap_phi_mux_len2_phi_fu_308_p4;
reg    grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_start_reg;
wire   [31:0] zext_ln38_fu_514_p1;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] ret_V_fu_337_p1;
wire   [22:0] lshr_ln30_cast_fu_347_p4;
wire   [0:0] icmp_ln1023_fu_341_p2;
wire   [23:0] lshr_ln30_cast_cast_fu_357_p1;
wire   [23:0] zext_ln30_fu_361_p1;
wire   [0:0] trunc_ln32_fu_382_p1;
wire   [0:0] tmp_fu_405_p3;
wire   [31:0] sub_ln33_fu_413_p2;
wire   [31:0] select_ln33_1_fu_419_p3;
wire   [31:0] add_ln33_fu_427_p2;
wire   [22:0] tmp_1_fu_443_p4;
wire   [0:0] icmp_fu_453_p2;
wire   [29:0] lshr_ln33_cast_fu_433_p4;
wire   [31:0] shl_ln1_fu_467_p3;
wire   [7:0] trunc_ln38_fu_487_p1;
wire   [9:0] shl_ln2_fu_491_p3;
wire   [9:0] add_ln38_fu_499_p2;
wire   [7:0] lshr_ln_fu_504_p4;
wire   [24:0] trunc_ln45_fu_542_p1;
wire   [24:0] select_ln41_fu_546_p3;
wire  signed [31:0] sext_ln41_fu_553_p1;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [31:0] TX_stream_TDATA_int_regslice;
reg    TX_stream_TVALID_int_regslice;
wire    TX_stream_TREADY_int_regslice;
wire    regslice_both_TX_stream_V_data_V_U_vld_out;
wire    regslice_both_TX_stream_V_keep_V_U_apdone_blk;
wire   [3:0] TX_stream_TKEEP_int_regslice;
wire    regslice_both_TX_stream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_TX_stream_V_keep_V_U_vld_out;
wire    regslice_both_TX_stream_V_strb_V_U_apdone_blk;
wire    regslice_both_TX_stream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_TX_stream_V_strb_V_U_vld_out;
wire    regslice_both_TX_stream_V_last_V_U_apdone_blk;
wire    regslice_both_TX_stream_V_last_V_U_ack_in_dummy;
wire    regslice_both_TX_stream_V_last_V_U_vld_out;
wire    regslice_both_TX_stream_V_dest_V_U_apdone_blk;
wire    regslice_both_TX_stream_V_dest_V_U_ack_in_dummy;
wire    regslice_both_TX_stream_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_start_reg = 1'b0;
end

SimpleTxMCDMA_SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_address0),
    .ce0(SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_ce0),
    .q0(SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_q0)
);

SimpleTxMCDMA_keep_table_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
keep_table_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(keep_table_address0),
    .ce0(keep_table_ce0),
    .q0(keep_table_q0)
);

SimpleTxMCDMA_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_address0),
    .ce0(buffer_ce0),
    .we0(buffer_we0),
    .d0(grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_d0),
    .q0(buffer_q0)
);

SimpleTxMCDMA_SimpleTxMCDMA_Pipeline_1 grp_SimpleTxMCDMA_Pipeline_1_fu_315(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_start),
    .ap_done(grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_done),
    .ap_idle(grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_idle),
    .ap_ready(grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_ready),
    .m_axi_mem_AWVALID(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWVALID),
    .m_axi_mem_AWREADY(1'b0),
    .m_axi_mem_AWADDR(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWADDR),
    .m_axi_mem_AWID(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWID),
    .m_axi_mem_AWLEN(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWLEN),
    .m_axi_mem_AWSIZE(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWSIZE),
    .m_axi_mem_AWBURST(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWBURST),
    .m_axi_mem_AWLOCK(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWLOCK),
    .m_axi_mem_AWCACHE(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWCACHE),
    .m_axi_mem_AWPROT(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWPROT),
    .m_axi_mem_AWQOS(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWQOS),
    .m_axi_mem_AWREGION(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWREGION),
    .m_axi_mem_AWUSER(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_AWUSER),
    .m_axi_mem_WVALID(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WVALID),
    .m_axi_mem_WREADY(1'b0),
    .m_axi_mem_WDATA(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WDATA),
    .m_axi_mem_WSTRB(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WSTRB),
    .m_axi_mem_WLAST(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WLAST),
    .m_axi_mem_WID(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WID),
    .m_axi_mem_WUSER(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_WUSER),
    .m_axi_mem_ARVALID(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARVALID),
    .m_axi_mem_ARREADY(mem_ARREADY),
    .m_axi_mem_ARADDR(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARADDR),
    .m_axi_mem_ARID(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARID),
    .m_axi_mem_ARLEN(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARLEN),
    .m_axi_mem_ARSIZE(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARSIZE),
    .m_axi_mem_ARBURST(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARBURST),
    .m_axi_mem_ARLOCK(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARLOCK),
    .m_axi_mem_ARCACHE(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARCACHE),
    .m_axi_mem_ARPROT(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARPROT),
    .m_axi_mem_ARQOS(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARQOS),
    .m_axi_mem_ARREGION(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARREGION),
    .m_axi_mem_ARUSER(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARUSER),
    .m_axi_mem_RVALID(mem_RVALID),
    .m_axi_mem_RREADY(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_RREADY),
    .m_axi_mem_RDATA(mem_RDATA),
    .m_axi_mem_RLAST(1'b0),
    .m_axi_mem_RID(1'd0),
    .m_axi_mem_RFIFONUM(mem_RFIFONUM),
    .m_axi_mem_RUSER(1'd0),
    .m_axi_mem_RRESP(2'd0),
    .m_axi_mem_BVALID(1'b0),
    .m_axi_mem_BREADY(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_BREADY),
    .m_axi_mem_BRESP(2'd0),
    .m_axi_mem_BID(1'd0),
    .m_axi_mem_BUSER(1'd0),
    .mem_transfers5(trunc_ln26_reg_632),
    .channel_descr_addr_load(channel_descr_addr_load_reg_617),
    .channel_descr_addr_load_cast(empty_60_reg_643),
    .shl_ln(shl_ln_reg_637),
    .buffer_r_address0(grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_address0),
    .buffer_r_ce0(grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_ce0),
    .buffer_r_we0(grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_we0),
    .buffer_r_d0(grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_d0)
);

SimpleTxMCDMA_s_axi_ctrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_S_AXI_CTRL_DATA_WIDTH ))
s_axi_ctrl_s_axi_U(
    .AWVALID(s_axi_s_axi_ctrl_AWVALID),
    .AWREADY(s_axi_s_axi_ctrl_AWREADY),
    .AWADDR(s_axi_s_axi_ctrl_AWADDR),
    .WVALID(s_axi_s_axi_ctrl_WVALID),
    .WREADY(s_axi_s_axi_ctrl_WREADY),
    .WDATA(s_axi_s_axi_ctrl_WDATA),
    .WSTRB(s_axi_s_axi_ctrl_WSTRB),
    .ARVALID(s_axi_s_axi_ctrl_ARVALID),
    .ARREADY(s_axi_s_axi_ctrl_ARREADY),
    .ARADDR(s_axi_s_axi_ctrl_ARADDR),
    .RVALID(s_axi_s_axi_ctrl_RVALID),
    .RREADY(s_axi_s_axi_ctrl_RREADY),
    .RDATA(s_axi_s_axi_ctrl_RDATA),
    .RRESP(s_axi_s_axi_ctrl_RRESP),
    .BVALID(s_axi_s_axi_ctrl_BVALID),
    .BREADY(s_axi_s_axi_ctrl_BREADY),
    .BRESP(s_axi_s_axi_ctrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .sw_reset(ap_rst_sw),
    .ACLK_EN(1'b1),
    .channel_descr_addr_address0(channel_descr_addr_address0),
    .channel_descr_addr_ce0(channel_descr_addr_ce0),
    .channel_descr_addr_q0(channel_descr_addr_q0),
    .channel_descr_len_address0(channel_descr_len_address0),
    .channel_descr_len_ce0(channel_descr_len_ce0),
    .channel_descr_len_q0(channel_descr_len_q0),
    .channel_descr_enable_address0(channel_descr_enable_address0),
    .channel_descr_enable_ce0(channel_descr_enable_ce0),
    .channel_descr_enable_q0(channel_descr_enable_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .flush(flush),
    .flush_done(s_axi_s_axi_ctrl_flush_done)
);

SimpleTxMCDMA_mem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 128 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MEM_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_MEM_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_MEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MEM_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 12 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
mem_m_axi_U(
    .AWVALID(m_axi_mem_AWVALID),
    .AWREADY(m_axi_mem_AWREADY),
    .AWADDR(m_axi_mem_AWADDR),
    .AWID(m_axi_mem_AWID),
    .AWLEN(m_axi_mem_AWLEN),
    .AWSIZE(m_axi_mem_AWSIZE),
    .AWBURST(m_axi_mem_AWBURST),
    .AWLOCK(m_axi_mem_AWLOCK),
    .AWCACHE(m_axi_mem_AWCACHE),
    .AWPROT(m_axi_mem_AWPROT),
    .AWQOS(m_axi_mem_AWQOS),
    .AWREGION(m_axi_mem_AWREGION),
    .AWUSER(m_axi_mem_AWUSER),
    .WVALID(m_axi_mem_WVALID),
    .WREADY(m_axi_mem_WREADY),
    .WDATA(m_axi_mem_WDATA),
    .WSTRB(m_axi_mem_WSTRB),
    .WLAST(m_axi_mem_WLAST),
    .WID(m_axi_mem_WID),
    .WUSER(m_axi_mem_WUSER),
    .ARVALID(m_axi_mem_ARVALID),
    .ARREADY(m_axi_mem_ARREADY),
    .ARADDR(m_axi_mem_ARADDR),
    .ARID(m_axi_mem_ARID),
    .ARLEN(m_axi_mem_ARLEN),
    .ARSIZE(m_axi_mem_ARSIZE),
    .ARBURST(m_axi_mem_ARBURST),
    .ARLOCK(m_axi_mem_ARLOCK),
    .ARCACHE(m_axi_mem_ARCACHE),
    .ARPROT(m_axi_mem_ARPROT),
    .ARQOS(m_axi_mem_ARQOS),
    .ARREGION(m_axi_mem_ARREGION),
    .ARUSER(m_axi_mem_ARUSER),
    .RVALID(m_axi_mem_RVALID),
    .RREADY(m_axi_mem_RREADY),
    .RDATA(m_axi_mem_RDATA),
    .RLAST(m_axi_mem_RLAST),
    .RID(m_axi_mem_RID),
    .RUSER(m_axi_mem_RUSER),
    .RRESP(m_axi_mem_RRESP),
    .BVALID(m_axi_mem_BVALID),
    .BREADY(m_axi_mem_BREADY),
    .BRESP(m_axi_mem_BRESP),
    .BID(m_axi_mem_BID),
    .BUSER(m_axi_mem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .flush(flush),
    .flush_done(m_axi_mem_flush_done),
    .I_ARVALID(mem_ARVALID),
    .I_ARREADY(mem_ARREADY),
    .I_ARADDR(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARADDR),
    .I_ARLEN(grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARLEN),
    .I_RVALID(mem_RVALID),
    .I_RREADY(mem_RREADY),
    .I_RDATA(mem_RDATA),
    .I_RFIFONUM(mem_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(mem_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(mem_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(mem_BVALID),
    .I_BREADY(1'b0)
);

SimpleTxMCDMA_regslice_both #(
    .DataWidth( 32 ))
regslice_both_TX_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(TX_stream_TDATA_int_regslice),
    .vld_in(TX_stream_TVALID_int_regslice),
    .ack_in(TX_stream_TREADY_int_regslice),
    .data_out(TX_stream_TDATA),
    .vld_out(regslice_both_TX_stream_V_data_V_U_vld_out),
    .ack_out(TX_stream_TREADY),
    .apdone_blk(regslice_both_TX_stream_V_data_V_U_apdone_blk)
);

SimpleTxMCDMA_regslice_both #(
    .DataWidth( 4 ))
regslice_both_TX_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(TX_stream_TKEEP_int_regslice),
    .vld_in(TX_stream_TVALID_int_regslice),
    .ack_in(regslice_both_TX_stream_V_keep_V_U_ack_in_dummy),
    .data_out(TX_stream_TKEEP),
    .vld_out(regslice_both_TX_stream_V_keep_V_U_vld_out),
    .ack_out(TX_stream_TREADY),
    .apdone_blk(regslice_both_TX_stream_V_keep_V_U_apdone_blk)
);

SimpleTxMCDMA_regslice_both #(
    .DataWidth( 4 ))
regslice_both_TX_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(TX_stream_TVALID_int_regslice),
    .ack_in(regslice_both_TX_stream_V_strb_V_U_ack_in_dummy),
    .data_out(TX_stream_TSTRB),
    .vld_out(regslice_both_TX_stream_V_strb_V_U_vld_out),
    .ack_out(TX_stream_TREADY),
    .apdone_blk(regslice_both_TX_stream_V_strb_V_U_apdone_blk)
);

SimpleTxMCDMA_regslice_both #(
    .DataWidth( 1 ))
regslice_both_TX_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataPkt_last_V_reg_673),
    .vld_in(TX_stream_TVALID_int_regslice),
    .ack_in(regslice_both_TX_stream_V_last_V_U_ack_in_dummy),
    .data_out(TX_stream_TLAST),
    .vld_out(regslice_both_TX_stream_V_last_V_U_vld_out),
    .ack_out(TX_stream_TREADY),
    .apdone_blk(regslice_both_TX_stream_V_last_V_U_apdone_blk)
);

SimpleTxMCDMA_regslice_both #(
    .DataWidth( 2 ))
regslice_both_TX_stream_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataPkt_dest_V_reg_257),
    .vld_in(TX_stream_TVALID_int_regslice),
    .ack_in(regslice_both_TX_stream_V_dest_V_U_ack_in_dummy),
    .data_out(TX_stream_TDEST),
    .vld_out(regslice_both_TX_stream_V_dest_V_U_vld_out),
    .ack_out(TX_stream_TREADY),
    .apdone_blk(regslice_both_TX_stream_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln33_1_fu_481_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln33_1_fu_481_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_start_reg <= 1'b1;
        end else if ((grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_ready == 1'b1)) begin
            grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & ((((icmp_ln22_fu_576_p2 == 1'd0) & (icmp_ln30_1_reg_628 == 1'd1)) | ((icmp_ln22_fu_576_p2 == 1'd0) & (icmp_ln30_fu_572_p2 == 1'd1))) | ((icmp_ln22_fu_576_p2 == 1'd0) & (channel_descr_enable_load_reg_598 == 1'd0))))) begin
        dataPkt_dest_V_reg_257 <= i_reg_593;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        dataPkt_dest_V_reg_257 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_1_fu_481_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_done == 1'b1))) begin
        len2_reg_304 <= 30'd0;
    end else if (((icmp_ln33_reg_700 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        len2_reg_304 <= len_reg_690;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_1_fu_481_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_done == 1'b1))) begin
        len_remaining_13_reg_292 <= len_remaining_26_reg_282;
    end else if (((icmp_ln33_reg_700 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        len_remaining_13_reg_292 <= len_remaining_3_reg_695;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln30_1_fu_371_p2 == 1'd0))) begin
        len_remaining_26_reg_282 <= channel_descr_len_q0;
    end else if (((icmp_ln30_fu_572_p2 == 1'd0) & (regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln30_1_reg_628 == 1'd0) & (channel_descr_enable_load_reg_598 == 1'd1))) begin
        len_remaining_26_reg_282 <= len_remaining_4_reg_659;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln30_1_fu_371_p2 == 1'd0))) begin
        mem_transfers5_reg_270 <= 24'd0;
    end else if (((icmp_ln30_fu_572_p2 == 1'd0) & (regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln30_1_reg_628 == 1'd0) & (channel_descr_enable_load_reg_598 == 1'd1))) begin
        mem_transfers5_reg_270 <= mem_transfers_reg_648;
    end
end

always @ (posedge ap_clk) begin
    s_axi_s_axi_ctrl_flush_done <= m_axi_mem_flush_done;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln30_reg_623 <= add_ln30_fu_365_p2;
        channel_descr_addr_load_reg_617 <= channel_descr_addr_q0;
        icmp_ln30_1_reg_628 <= icmp_ln30_1_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_descr_enable_load_reg_598 <= channel_descr_enable_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dataPkt_last_V_reg_673 <= dataPkt_last_V_fu_519_p2;
        icmp_ln33_reg_700 <= icmp_ln33_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        empty_60_reg_643 <= empty_60_fu_395_p1;
        shl_ln_reg_637[9] <= shl_ln_fu_386_p3[9];
        trunc_ln26_reg_632 <= trunc_ln26_fu_377_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_593 <= i_fu_331_p2;
        zext_ln24_reg_582[1 : 0] <= zext_ln24_fu_326_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        len_reg_690 <= len_fu_525_p2;
        len_remaining_3_reg_695 <= len_remaining_3_fu_531_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_done == 1'b1))) begin
        len_remaining_4_reg_659 <= len_remaining_4_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mem_transfers_reg_648 <= mem_transfers_fu_399_p2;
        select_ln33_reg_654 <= select_ln33_fu_459_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_ce0 = 1'b1;
    end else begin
        SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        TX_stream_TDATA_blk_n = TX_stream_TREADY_int_regslice;
    end else begin
        TX_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        TX_stream_TVALID_int_regslice = 1'b1;
    end else begin
        TX_stream_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & ((((icmp_ln22_fu_576_p2 == 1'd1) & (icmp_ln30_1_reg_628 == 1'd1)) | ((icmp_ln22_fu_576_p2 == 1'd1) & (icmp_ln30_fu_572_p2 == 1'd1))) | ((icmp_ln22_fu_576_p2 == 1'd1) & (channel_descr_enable_load_reg_598 == 1'd0))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_700 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_len2_phi_fu_308_p4 = len_reg_690;
    end else begin
        ap_phi_mux_len2_phi_fu_308_p4 = len2_reg_304;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_700 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_len_remaining_13_phi_fu_295_p4 = len_remaining_3_reg_695;
    end else begin
        ap_phi_mux_len_remaining_13_phi_fu_295_p4 = len_remaining_13_reg_292;
    end
end

always @ (*) begin
    if (((regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & ((((icmp_ln22_fu_576_p2 == 1'd1) & (icmp_ln30_1_reg_628 == 1'd1)) | ((icmp_ln22_fu_576_p2 == 1'd1) & (icmp_ln30_fu_572_p2 == 1'd1))) | ((icmp_ln22_fu_576_p2 == 1'd1) & (channel_descr_enable_load_reg_598 == 1'd0))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_address0 = zext_ln38_fu_514_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        buffer_address0 = grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_address0;
    end else begin
        buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        buffer_ce0 = grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_ce0;
    end else begin
        buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buffer_we0 = grp_SimpleTxMCDMA_Pipeline_1_fu_315_buffer_r_we0;
    end else begin
        buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_descr_addr_ce0 = 1'b1;
    end else begin
        channel_descr_addr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        channel_descr_enable_ce0 = 1'b1;
    end else begin
        channel_descr_enable_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_descr_len_ce0 = 1'b1;
    end else begin
        channel_descr_len_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        keep_table_ce0 = 1'b1;
    end else begin
        keep_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        mem_ARVALID = grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_ARVALID;
    end else begin
        mem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        mem_RREADY = grp_SimpleTxMCDMA_Pipeline_1_fu_315_m_axi_mem_RREADY;
    end else begin
        mem_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (channel_descr_enable_q0 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln30_1_fu_371_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln33_1_fu_481_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln33_1_fu_481_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & ((((icmp_ln22_fu_576_p2 == 1'd1) & (icmp_ln30_1_reg_628 == 1'd1)) | ((icmp_ln22_fu_576_p2 == 1'd1) & (icmp_ln30_fu_572_p2 == 1'd1))) | ((icmp_ln22_fu_576_p2 == 1'd1) & (channel_descr_enable_load_reg_598 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & ((((icmp_ln22_fu_576_p2 == 1'd0) & (icmp_ln30_1_reg_628 == 1'd1)) | ((icmp_ln22_fu_576_p2 == 1'd0) & (icmp_ln30_fu_572_p2 == 1'd1))) | ((icmp_ln22_fu_576_p2 == 1'd0) & (channel_descr_enable_load_reg_598 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln30_fu_572_p2 == 1'd0) & (regslice_both_TX_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln30_1_reg_628 == 1'd0) & (channel_descr_enable_load_reg_598 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_address0 = ap_phi_mux_len_remaining_13_phi_fu_295_p4;

assign TX_stream_TDATA_int_regslice = (sext_ln41_fu_553_p1 & buffer_q0);

assign TX_stream_TKEEP_int_regslice = ((dataPkt_last_V_reg_673[0:0] == 1'b1) ? keep_table_q0 : 4'd15);

assign TX_stream_TVALID = regslice_both_TX_stream_V_data_V_U_vld_out;

assign add_ln30_fu_365_p2 = (lshr_ln30_cast_cast_fu_357_p1 + zext_ln30_fu_361_p1);

assign add_ln33_fu_427_p2 = (select_ln33_1_fu_419_p3 + len_remaining_26_reg_282);

assign add_ln38_fu_499_p2 = (shl_ln2_fu_491_p3 + shl_ln_reg_637);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'b0 == TX_stream_TREADY_int_regslice) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == TX_stream_TREADY_int_regslice) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b0 == TX_stream_TREADY_int_regslice) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == TX_stream_TREADY_int_regslice) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b0 == TX_stream_TREADY_int_regslice) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == TX_stream_TREADY_int_regslice) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter1 = (1'b0 == TX_stream_TREADY_int_regslice);
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter2 = (1'b0 == TX_stream_TREADY_int_regslice);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = (~ap_rst_n | ap_rst_sw);
end

assign channel_descr_addr_address0 = zext_ln24_reg_582;

assign channel_descr_enable_address0 = zext_ln24_fu_326_p1;

assign channel_descr_len_address0 = zext_ln24_reg_582;

assign dataPkt_last_V_fu_519_p2 = (($signed(ap_phi_mux_len_remaining_13_phi_fu_295_p4) < $signed(32'd5)) ? 1'b1 : 1'b0);

assign empty_60_fu_395_p1 = channel_descr_addr_load_reg_617[1:0];

assign grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_start = grp_SimpleTxMCDMA_Pipeline_1_fu_315_ap_start_reg;

assign i_fu_331_p2 = (dataPkt_dest_V_reg_257 + 2'd1);

assign icmp_fu_453_p2 = ((tmp_1_fu_443_p4 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln1023_fu_341_p2 = ((ret_V_fu_337_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_576_p2 = ((dataPkt_dest_V_reg_257 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln30_1_fu_371_p2 = ((add_ln30_fu_365_p2 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_572_p2 = ((mem_transfers_reg_648 == add_ln30_reg_623) ? 1'b1 : 1'b0);

assign icmp_ln33_1_fu_481_p2 = ((select_ln33_fu_459_p3 == 30'd0) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_537_p2 = ((len_fu_525_p2 == select_ln33_reg_654) ? 1'b1 : 1'b0);

assign keep_table_address0 = ap_phi_mux_len_remaining_13_phi_fu_295_p4;

assign len_fu_525_p2 = (ap_phi_mux_len2_phi_fu_308_p4 + 30'd1);

assign len_remaining_3_fu_531_p2 = ($signed(ap_phi_mux_len_remaining_13_phi_fu_295_p4) + $signed(32'd4294967292));

assign len_remaining_4_fu_475_p2 = (len_remaining_26_reg_282 - shl_ln1_fu_467_p3);

assign lshr_ln30_cast_cast_fu_357_p1 = lshr_ln30_cast_fu_347_p4;

assign lshr_ln30_cast_fu_347_p4 = {{channel_descr_len_q0[31:9]}};

assign lshr_ln33_cast_fu_433_p4 = {{add_ln33_fu_427_p2[31:2]}};

assign lshr_ln_fu_504_p4 = {{add_ln38_fu_499_p2[9:2]}};

assign mem_transfers_fu_399_p2 = (mem_transfers5_reg_270 + 24'd1);

assign ret_V_fu_337_p1 = channel_descr_len_q0[8:0];

assign select_ln33_1_fu_419_p3 = ((tmp_fu_405_p3[0:0] == 1'b1) ? sub_ln33_fu_413_p2 : 32'd3);

assign select_ln33_fu_459_p3 = ((icmp_fu_453_p2[0:0] == 1'b1) ? lshr_ln33_cast_fu_433_p4 : 30'd128);

assign select_ln41_fu_546_p3 = ((dataPkt_last_V_reg_673[0:0] == 1'b1) ? trunc_ln45_fu_542_p1 : 25'd33554431);

assign sext_ln41_fu_553_p1 = $signed(select_ln41_fu_546_p3);

assign shl_ln1_fu_467_p3 = {{select_ln33_fu_459_p3}, {2'd0}};

assign shl_ln2_fu_491_p3 = {{trunc_ln38_fu_487_p1}, {2'd0}};

assign shl_ln_fu_386_p3 = {{trunc_ln32_fu_382_p1}, {9'd0}};

assign sub_ln33_fu_413_p2 = (32'd3 - len_remaining_26_reg_282);

assign tmp_1_fu_443_p4 = {{add_ln33_fu_427_p2[31:9]}};

assign tmp_fu_405_p3 = len_remaining_26_reg_282[32'd31];

assign trunc_ln26_fu_377_p1 = mem_transfers5_reg_270[22:0];

assign trunc_ln32_fu_382_p1 = mem_transfers5_reg_270[0:0];

assign trunc_ln38_fu_487_p1 = ap_phi_mux_len2_phi_fu_308_p4[7:0];

assign trunc_ln45_fu_542_p1 = SimpleTxMCDMA_unsigned_int_stream_axis_0_channel_descr_t_data_mask_q0[24:0];

assign zext_ln24_fu_326_p1 = dataPkt_dest_V_reg_257;

assign zext_ln30_fu_361_p1 = icmp_ln1023_fu_341_p2;

assign zext_ln38_fu_514_p1 = lshr_ln_fu_504_p4;

always @ (posedge ap_clk) begin
    zext_ln24_reg_582[31:2] <= 30'b000000000000000000000000000000;
    shl_ln_reg_637[8:0] <= 9'b000000000;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "SimpleTxMCDMA_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //SimpleTxMCDMA

